{
    "name": "Test Dev Environment",
    "image": "ghcr.io/sjinks/test-cs-images/alpine-base:latest",
    "overrideCommand": false,
    "forwardPorts": [80, 81, 8025],
    "portsAttributes": {
        "80": {
            "label": "Application",
            "onAutoForward": "notify",
            "elevateIfNeeded": true
        },
        "81": {
            "label": "phpMyAdmin",
            "onAutoForward": "notify",
            "elevateIfNeeded": true
        },
        "1025": {
            "label": "MailHog SMTP",
            "onAutoForward": "ignore"
        },
        "3306": {
            "label": "MySQL",
            "onAutoForward": "ignore"
        },
        "8025": {
            "label": "MailHog",
            "onAutoForward": "notify"
        },
        "9000": {
            "label": "php-fpm",
            "onAutoForward": "ignore"
        },
        "9003": {
            "label": "XDebug Client Port",
            "onAutoForward": "notify"
        }
    },
    "postCreateCommand": "/usr/local/bin/setup-wordpress.sh",
    "features": {
        "ghcr.io/sjinks/test-cs-images/dev-tools:1": {},
        "ghcr.io/sjinks/test-cs-images/mailhog:1": {},
        "ghcr.io/sjinks/test-cs-images/mariadb:1": {
            // GHCS
            // "installDatabaseToWorkspaces": true
            // VSCode
            "installDatabaseToWorkspaces": false
        },
        "ghcr.io/sjinks/test-cs-images/mc:1": {
            "enabled": true
        },
        "ghcr.io/sjinks/test-cs-images/memcached:1": {},
        "ghcr.io/sjinks/test-cs-images/nginx:1": {},
        "ghcr.io/sjinks/test-cs-images/php:1": {},
        "ghcr.io/sjinks/test-cs-images/phpmyadmin:1": {
            "enabled": true
        },
        "ghcr.io/sjinks/test-cs-images/vip-cli:1": {},
        "ghcr.io/sjinks/test-cs-images/vip-go-mu-plugins:1": {},
        "ghcr.io/sjinks/test-cs-images/wordpress:1": {
            // GHCS
            // "moveUploadsToWorkspaces": true,
            // VSCode
            "moveUploadsToWorkspaces": false,
            "domain": "${localWorkspaceFolderBasename}.lndo.site"
        },
        "ghcr.io/sjinks/test-cs-images/wp-cli:1": {},
        "ghcr.io/sjinks/test-cs-images/xdebug:1": {},
        "ghcr.io/sjinks/test-cs-images/elasticsearch:1": {
            "enabled": true,
            "installDataToWorkspaces": true
        }
    },
    // Only enable this for VSCode
    "mounts": [
        {
            "type": "volume",
            "source": "wp-uploads",
            "target": "/wp/wp-content/uploads"
        },
        {
            "type": "volume",
            "source": "mysql-data",
            "target": "/var/lib/mysql"
        }
    ],
    // Only enable this for VSCode
    // To run traefik:
    // docker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock -p 80:80 -p 443:443 -p 8088:8080 traefik:2.8 --api.insecure=true --providers.docker=true --providers.docker.exposedByDefault=false --entrypoints.http.address=:80 --entrypoints.https.address=:443
    "runArgs": [
        "-l", "traefik.enable=true",

        // Subdomain-based multisite
        // "-l", "traefik.http.routers.${devcontainerId}-https.rule=HostRegexp(`${localWorkspaceFolderBasename}.lndo.site`, `{wildcard:[a-z0-9-]+}.${localWorkspaceFolderBasename}.lndo.site`)",
        "-l", "traefik.http.routers.${devcontainerId}-https.rule=Host(`${localWorkspaceFolderBasename}.lndo.site`)",
        "-l", "traefik.http.routers.${devcontainerId}-https.tls=",
        "-l", "traefik.http.routers.${devcontainerId}-https.service=${devcontainerId}-service",

        // Subdomain-based multisite
        // "-l", "traefik.http.routers.${devcontainerId}-http.rule=HostRegexp(`${localWorkspaceFolderBasename}.lndo.site`, `{wildcard:[a-z0-9-]+}.${localWorkspaceFolderBasename}.lndo.site`)",
        // Subdirectory-based multisite or single site
        "-l", "traefik.http.routers.${devcontainerId}-http.rule=Host(`${localWorkspaceFolderBasename}.lndo.site`)",
        "-l", "traefik.http.routers.${devcontainerId}-http.service=${devcontainerId}-service",

        "-l", "traefik.http.services.${devcontainerId}-service.loadbalancer.server.port=80"
    ],
    "customizations": {
        "vscode": {
            "settings": {
                "terminal.integrated.shellIntegration.enabled": false
            }
        }
    }
}
